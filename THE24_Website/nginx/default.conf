# default.conf
# Redirect all HTTP traffic to HTTPS
server {
    listen 80;  # Listen for HTTP traffic
    server_name THE24TECH.eu-north-1.elasticbeanstalk.com;  # Change to your domain

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;  # Permanent redirect to HTTPS
    }
}

server {
    listen 443 ssl;  # Listen for HTTPS traffic
    server_name THE24TECH.eu-north-1.elasticbeanstalk.com;

    # SSL Configuration
    # ssl_certificate /path/to/your/fullchain.pem;  # Path to your SSL certificate
    # ssl_certificate_key /path/to/your/privkey.pem;  # Path to your SSL private key

    # Security headers
    add_header X-Frame-Options DENY;  # Protect against clickjacking
    add_header X-XSS-Protection "1; mode=block";  # Enable XSS protection
    add_header X-Content-Type-Options nosniff;  # Prevent MIME type sniffing
    add_header Referrer-Policy no-referrer-when-downgrade;  # Referrer policy

    # Gzip compression for static files
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 256;  # Minimum size of files to compress
    gzip_vary on;  # Enable Vary header for proxy caching

    # Serve static files with caching
    location /static/ {
        root /app;  # Path to your static files
        expires 30d;  # Cache for 30 days
        add_header Cache-Control "public, max-age=2592000";  # 30 days
    }

    # Serve media files with caching
    location /media/ {
        root /app;  # Path to your media files
        expires 30d;  # Cache for 30 days
        add_header Cache-Control "public, max-age=2592000";  # 30 days
    }

    # Proxy pass to Gunicorn (Django app)
    location / {
        proxy_pass http://web:8000;  # Proxy to the web service running Gunicorn
        proxy_set_header Host $host;  # Preserve the original Host header
        proxy_set_header X-Real-IP $remote_addr;  # Forward the real IP address
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward the X-Forwarded-For header
        proxy_set_header X-Forwarded-Proto $scheme;  # Forward the protocol (HTTP/HTTPS)
    }
}
